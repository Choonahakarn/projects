## ยื่งใช้เวลาสอบมาก นักเรียนจะสามารถทำคะแนนได้มากขึ้นใช่ไหม ? แล้วมากเท่าไหร่
# นำเข้าไลบรารีที่จำเป็น
library(ggplot2)
library(dplyr)

# สร้างชุดข้อมูล
data <- data.frame(
  Hours = c(2.5, 5.1, 3.2, 8.5, 3.5, 1.5, 9.2, 5.5, 8.3, 2.7, 7.7, 5.9, 4.5, 3.3, 1.1, 8.9, 2.5, 1.9, 6.1, 7.4, 2.7, 4.8, 3.8, 6.9, 7.8),
  Scores = c(21, 47, 27, 75, 30, 20, 88, 60, 81, 25, 85, 62, 41, 42, 17, 95, 30, 24, 67, 69, 30, 54, 35, 76, 86)
)

# แสดงข้อมูล
print(data)

# เช็ดค่าสัมพันธุ์
cor(data$Hours,data$Scores)

# สร้างกราฟการกระจาย (Scatter Plot)
ggplot(data, aes(x = Hours, y = Scores)) +
  geom_point(color = 'blue') +
  ggtitle('Hours vs Percentage') +
  xlab('Hours Studied') +
  ylab('Percentage Score')

  # สร้างโมเดลการถดถอยเชิงเส้น
model <- lm(Scores ~ Hours, data = data)

# สรุปผลโมเดล
summary(model)

# ลองทำนายคะแนนใหม่ สร้างจำนวนชั่วโมงที่กำหนด

new_hours <- data.frame (
  Hours = c(8,1,2.5,3,4,7,6.8,9.2)
)

new_hours$Prediction_Score <- predict(model, newdata = new_hours )
print(new_hours)

# ลอง Train RMSE
squared_error = (data$Hours - data$predicted)**2

(rmse = sqrt(mean(squared_error)))

## split Data แบ่งตัว test , train
set.seed(42) ## lock data

n = nrow(data) # จำนวนแถวในข้อมูล

id = sample(1:n , size = n*0.8)

train_data = data[id,]
test_data = data[-id,]

## Train Model
model_train = lm(Hours ~ Scores , data = train_data)

p_train = predict(model_train)

error_train = train_data$Hours - p_train

(rmse_train = sqrt(mean(error_train**2)))

## Test model
p_test = predict(model_train , newdata = test_data)
error_test = test_data$Hours - p_test
(rmse_test = sqrt(mean(error_test**2)))

## Print Result
cat("RMSE Train:",rmse_train,"\n RMSE test:", rmse_test)
data
